local M = {}

function M.highlight(palette, opts)
  return {
    ["@annotation"]            = { fg = palette.white },
    ["@attribute"]             = { fg = palette.crimson.attribute },
    ["@boolean"]               = { fg = palette.red },
    ["@character"]             = { fg = palette.green },
    ["@comment"]               = vim.tbl_extend("force", { fg = palette.medium_gray }, opts.styles.comments),
    ["@conditional"]           = { fg = palette.gray_blue },
    ["@const.builtin"]         = { fg = palette.red },
    ["@const.macro"]           = { fg = palette.cyan },
    ["@constant"]              = { fg = palette.custom.red },
    ["@constructor"]           = { fg = palette.crimson.tag },
    ["@emphasis"]              = { italic = true },
    ["@error"]                 = { fg = palette.error },
    ["@exception"]             = { fg = palette.red },
    ["@field"]                 = { fg = palette.white },
    ["@float"]                 = { fg = palette.red },
    ["@function"]              = vim.tbl_extend("force", { fg = palette.crimson.definition }, opts.styles.functions),
    ["@function.builtin"]      = { fg = palette.cyan },
    ["@function.macro"]        = { fg = palette.cyan },
    ["@include"]               = { fg = palette.crimson.keyword },
    ["@keyword"]               = vim.tbl_extend("force", { fg = palette.gray_blue }, opts.styles.keywords),
    ["@keyword.function"]      = vim.tbl_extend("force", { fg = palette.gray_blue }, opts.styles.keywords),
    ["@keyword.operator"]      = { fg = palette.gray_blue },
    ["@label"]                 = { fg = palette.white },
    ["@literal"]               = { fg = palette.medium_gray },
    ["@method"]                = { fg = palette.crimson.number },
    ["@method.call"]           = { fg = palette.crimson.number },
    ["@namespace"]             = { fg = palette.white },
    ["@number"]                = { fg = palette.red },
    ["@operator"]              = { fg = palette.white },
    ["@parameter"]             = { fg = palette.crimson.meta },
    ["@parameter.reference"]   = { fg = palette.white },
    ["@property"]              = { fg = palette.crimson.variable2 },
    ["@punctuation.bracket"]   = { fg = palette.white },
    ["@punctuation.delimiter"] = { fg = palette.white },
    ["@punctuation.special"]   = { fg = palette.crimson.tag },
    ["@query.linter.error"]    = { fg = palette.warning },
    ["@repeat"]                = { fg = palette.gray_blue },
    ["@string"]                = { fg = palette.crimson.atom },
    ["@string.escape"]         = { fg = palette.crimson.atom },
    ["@string.regex"]          = { fg = palette.crimson.atom },
    ["@strong"]                = { fg = palette.medium_gray },
    ["@structure"]             = { fg = palette.gray_blue },
    ["@symbol"]                = { fg = palette.medium_gray },
    ["@tag"]                   = { fg = palette.crimson.keyword },
    ["@tag.attribute"]         = { fg = palette.crimson.attribute },
    ["@tag.delimiter"]         = { fg = palette.crimson.tag },
    ["@text"]                  = { fg = palette.white },
    ["@title"]                 = { fg = palette.medium_gray },
    ["@type"]                  = vim.tbl_extend("force", { fg = palette.custom.red, bold = true }, opts.styles.type),
    ["@type.builtin"]          = { fg = palette.custom.red },
    ["@underline"]             = { underline = true },
    ["@uri"]                   = { fg = palette.cyan, underline = true },
    ["@variable"]              = vim.tbl_extend("force", { fg = palette.crimson.definition }, opts.styles.variables),
    ["@variable.builtin"]      = { fg = palette.crimson.definition },
  }
end

return M
